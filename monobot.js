const Telegraf = require('telegraf')
const bot = new Telegraf('1354795701:AAFrMR0o9hUX6PKqA22ETmQ8KdkEIbjj7yo')
const request = require("request")
const fs = require('fs')
const URL_PERSONAL = "https://api.monobank.ua/personal/client-info";
let authorized = false;
let userToken = "";
let delayInMilliseconds = 2000;

function isAuth() {
    return authorized;
}
var download = function(uri, filename, callback){
    request.head(uri, function(err, res, body){
        console.log('content-type:', res.headers['content-type']);
        console.log('content-length:', res.headers['content-length']);

        request(uri).pipe(fs.createWriteStream(filename)).on('close', callback);
    });
};
bot.start((ctx) => {
    ctx.reply("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å. –í—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –∫–∞–∫: " + ctx.from.first_name + " " + ctx.from.last_name);
    return ctx.reply("–ù–∞–ø–∏—à–∏—Ç–µ /info –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏");
})
bot.command("/info",(ctx) => {
    if(isAuth() === false){
        ctx.reply("–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã, –ø—Ä–æ–π–¥–∏—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é /auth") ;
    }
    return ctx.reply("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ: \n" +
        "1. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è /auth\n" +
        "2. –ü–æ–ª—É—á–∏—Ç—å –∏–Ω–æ—Ä–º–∞—Ü–∏—é –æ –±–∞–ª–∞–Ω—Å–µ /balance \n" +
        "3. –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞–ª—é—Ç–∞—Ö /currency"
        )
})
bot.command("/balance",(ctx) => {
    if(isAuth() === false){
        ctx.reply("–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã, –ø—Ä–æ–π–¥–∏—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é /auth") ;
    }else{
        request({
            'method': 'GET',
            'url': URL_PERSONAL,
            'headers': {
                'X-Token': userToken
            }
        }, function (error, response, body) {
            if(body[0] === "Too many requests"){
                ctx.reply("–û–∂–∏–¥–∞–π—Ç–µ, —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤.")
            }else{
                var data = JSON.parse(body)
                console.log(data)
                for(var i = 0; i < data.accounts.length; i++){
                    if(data.accounts[i].currencyCode === 980){
                        return ctx.reply(data.name + "\n" +
                            "ü§ë –í–∞—à –±–∞–ª–∞–Ω—Å: " + data.accounts[2].balance/100
                        )
                    }
                }
            }
        })

    }
})
bot.command("/auth", (ctx) =>{
    ctx.reply("–°–ø–µ—Ä–≤–∞–π –∑–∞–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç https://api.monobank.ua –∏ –ø—Ä–æ–π–¥–∏—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é.");
    setTimeout(function() {
        ctx.reply("–î–∞–ª–µ–µ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å.");
    },delayInMilliseconds);
    setTimeout(function() {
        ctx.replyWithPhoto({ source: './resources/step1.jpg' });
    },delayInMilliseconds += 2000);
    setTimeout(function() {
        ctx.reply("–í—ã –ø–æ–ª—É—á–∏—Ç–µ –í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω.");
    },delayInMilliseconds += 2000);
    setTimeout(function() {
        ctx.replyWithPhoto({ source: './resources/step2.jpg' });
    },delayInMilliseconds += 2000);
    setTimeout(function() {
        ctx.reply("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –∫–æ–º–∞–Ω–¥–æ–π /token [–≤–∞—à —Ç–æ–∫–µ–Ω]. \n(–ü—Ä–∏–º–µ—Ä: /token 1kjh5123jkh54lmnjg123j54)");
    },delayInMilliseconds += 2000);
    delayInMilliseconds = 2000;
})
bot.on('message', async (ctx) =>{
    let message = ctx.message.text.split(" ");
    if(message[0] === "/token"){
        if(message[1]){
            if(message[1].length > 7){
                userToken = message[1];
                ctx.reply("–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã!");
                authorized = true;
            }else{
                ctx.reply("–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
            }
        }else {
            ctx.reply("–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω.")
        }
    }
})
bot.startPolling()